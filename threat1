#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>

pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
pthread_cond_t cond = PTHREAD_COND_INITIALIZER;



void *thread1(void *junk)
{
    int i;
	int j;

	for(i = 1; i <= 5; i++)
    {
           
		   for(j = 0; j < 3; j++)
		   {
			   printf("child thead\n");
		   }
           //sleep(3);          
		   pthread_cond_signal(&cond);
           sleep(2);
    } 
}


int main(void)
{
    int i;
	int j;
	
	pthread_t t_a;
    pthread_t t_b;
    pthread_create(&t_a,NULL,thread1,(void *)NULL);
	
    for(i = 1; i <= 5; i++)
	{
	    
        pthread_cond_wait(&cond,&mutex);
		for(j = 0; j < 6; j++)
		{
		    printf("main thread!\n");    
		}
    }
    
    pthread_mutex_destroy(&mutex);
    pthread_cond_destroy(&cond);

	return 0;
}
